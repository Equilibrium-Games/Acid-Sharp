<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Definitions>
  <!--
  ***************************************
  **
  ** stb_image.h
  **
  ***************************************
  -->
  <Export name="stbi_load_from_memory" target="Common" source="stb_image.h">
    <Description>
      <![CDATA[
////////////////////////////////////
]]>
    </Description>
    <Parameters>
      <Parameter type="stbi_uc" name="buffer" />
      <Parameter type="int" name="len" />
      <Parameter type="int" name="x" />
      <Parameter type="int" name="y" />
      <Parameter type="int" name="channels_in_file" />
      <Parameter type="int" name="desired_channels" />
    </Parameters>
  </Export>
  <Export name="stbi_load_16_from_memory" target="Common" source="stb_image.h">
    <Description>
      <![CDATA[
////////////////////////////////////
]]>
    </Description>
    <Parameters>
      <Parameter type="stbi_uc" name="buffer" />
      <Parameter type="int" name="len" />
      <Parameter type="int" name="x" />
      <Parameter type="int" name="y" />
      <Parameter type="int" name="channels_in_file" />
      <Parameter type="int" name="desired_channels" />
    </Parameters>
  </Export>
  <!--
  ***************************************
  **
  ** glfw3.h
  **
  ***************************************
  -->
  <Export name="glfwInit" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
  </Export>
  <Export name="glfwTerminate" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
  </Export>
  <Export name="glfwInitHint" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="hint" />
      <Parameter type="int" name="value" />
    </Parameters>
  </Export>
  <Export name="glfwGetVersion" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="major" />
      <Parameter type="int" name="minor" />
      <Parameter type="int" name="rev" />
    </Parameters>
  </Export>
  <Export name="glfwGetVersionString" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
  </Export>
  <Export name="glfwGetError" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="sbyte**" name="description" />
    </Parameters>
  </Export>
  <Export name="glfwSetErrorCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWerrorfun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwGetMonitors" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="count" />
    </Parameters>
  </Export>
  <Export name="glfwGetPrimaryMonitor" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
  </Export>
  <Export name="glfwGetMonitorPos" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWmonitor" name="monitor" />
      <Parameter type="int" name="xpos" />
      <Parameter type="int" name="ypos" />
    </Parameters>
  </Export>
  <Export name="glfwGetMonitorPhysicalSize" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWmonitor" name="monitor" />
      <Parameter type="int" name="widthMM" />
      <Parameter type="int" name="heightMM" />
    </Parameters>
  </Export>
  <Export name="glfwGetMonitorContentScale" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWmonitor" name="monitor" />
      <Parameter type="float*" name="xscale" />
      <Parameter type="float*" name="yscale" />
    </Parameters>
  </Export>
  <Export name="glfwGetMonitorName" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWmonitor" name="monitor" />
    </Parameters>
  </Export>
  <Export name="glfwSetMonitorUserPointer" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWmonitor" name="monitor" />
      <Parameter type="IntPtr" name="pointer" />
    </Parameters>
  </Export>
  <Export name="glfwGetMonitorUserPointer" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWmonitor" name="monitor" />
    </Parameters>
  </Export>
  <Export name="glfwSetMonitorCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWmonitorfun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwGetVideoModes" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWmonitor" name="monitor" />
      <Parameter type="int" name="count" />
    </Parameters>
  </Export>
  <Export name="glfwGetVideoMode" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWmonitor" name="monitor" />
    </Parameters>
  </Export>
  <Export name="glfwSetGamma" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWmonitor" name="monitor" />
      <Parameter type="float" name="gamma" />
    </Parameters>
  </Export>
  <Export name="glfwGetGammaRamp" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWmonitor" name="monitor" />
    </Parameters>
  </Export>
  <Export name="glfwSetGammaRamp" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWmonitor" name="monitor" />
      <Parameter type="GLFWgammaramp" name="ramp" />
    </Parameters>
  </Export>
  <Export name="glfwDefaultWindowHints" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
  </Export>
  <Export name="glfwWindowHint" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="hint" />
      <Parameter type="int" name="value" />
    </Parameters>
  </Export>
  <Export name="glfwWindowHintString" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="hint" />
      <Parameter type="string" name="value" />
    </Parameters>
  </Export>
  <Export name="glfwCreateWindow" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="width" />
      <Parameter type="int" name="height" />
      <Parameter type="string" name="title" />
      <Parameter type="GLFWmonitor" name="monitor" />
      <Parameter type="GLFWwindow" name="share" />
    </Parameters>
  </Export>
  <Export name="glfwDestroyWindow" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
    </Parameters>
  </Export>
  <Export name="glfwWindowShouldClose" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowShouldClose" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="int" name="value" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowTitle" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="string" name="title" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowIcon" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="int" name="count" />
      <Parameter type="GLFWimage" name="images" />
    </Parameters>
  </Export>
  <Export name="glfwGetWindowPos" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="int" name="xpos" />
      <Parameter type="int" name="ypos" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowPos" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="int" name="xpos" />
      <Parameter type="int" name="ypos" />
    </Parameters>
  </Export>
  <Export name="glfwGetWindowSize" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="int" name="width" />
      <Parameter type="int" name="height" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowSizeLimits" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="int" name="minwidth" />
      <Parameter type="int" name="minheight" />
      <Parameter type="int" name="maxwidth" />
      <Parameter type="int" name="maxheight" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowAspectRatio" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="int" name="numer" />
      <Parameter type="int" name="denom" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowSize" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="int" name="width" />
      <Parameter type="int" name="height" />
    </Parameters>
  </Export>
  <Export name="glfwGetFramebufferSize" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="int" name="width" />
      <Parameter type="int" name="height" />
    </Parameters>
  </Export>
  <Export name="glfwGetWindowFrameSize" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="int" name="left" />
      <Parameter type="int" name="top" />
      <Parameter type="int" name="right" />
      <Parameter type="int" name="bottom" />
    </Parameters>
  </Export>
  <Export name="glfwGetWindowContentScale" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="float*" name="xscale" />
      <Parameter type="float*" name="yscale" />
    </Parameters>
  </Export>
  <Export name="glfwGetWindowOpacity" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowOpacity" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="float" name="opacity" />
    </Parameters>
  </Export>
  <Export name="glfwIconifyWindow" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
    </Parameters>
  </Export>
  <Export name="glfwRestoreWindow" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
    </Parameters>
  </Export>
  <Export name="glfwMaximizeWindow" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
    </Parameters>
  </Export>
  <Export name="glfwShowWindow" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
    </Parameters>
  </Export>
  <Export name="glfwHideWindow" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
    </Parameters>
  </Export>
  <Export name="glfwFocusWindow" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
    </Parameters>
  </Export>
  <Export name="glfwRequestWindowAttention" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
    </Parameters>
  </Export>
  <Export name="glfwGetWindowMonitor" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowMonitor" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWmonitor" name="monitor" />
      <Parameter type="int" name="xpos" />
      <Parameter type="int" name="ypos" />
      <Parameter type="int" name="width" />
      <Parameter type="int" name="height" />
      <Parameter type="int" name="refreshRate" />
    </Parameters>
  </Export>
  <Export name="glfwGetWindowAttrib" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="int" name="attrib" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowAttrib" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="int" name="attrib" />
      <Parameter type="int" name="value" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowUserPointer" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="IntPtr" name="pointer" />
    </Parameters>
  </Export>
  <Export name="glfwGetWindowUserPointer" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowPosCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWwindowposfun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowSizeCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWwindowsizefun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowCloseCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWwindowclosefun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowRefreshCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWwindowrefreshfun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowFocusCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWwindowfocusfun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowIconifyCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWwindowiconifyfun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowMaximizeCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWwindowmaximizefun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwSetFramebufferSizeCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWframebuffersizefun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwSetWindowContentScaleCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWwindowcontentscalefun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwPollEvents" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
  </Export>
  <Export name="glfwWaitEvents" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
  </Export>
  <Export name="glfwWaitEventsTimeout" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="double" name="timeout" />
    </Parameters>
  </Export>
  <Export name="glfwPostEmptyEvent" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
  </Export>
  <Export name="glfwGetInputMode" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="int" name="mode" />
    </Parameters>
  </Export>
  <Export name="glfwSetInputMode" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="int" name="mode" />
      <Parameter type="int" name="value" />
    </Parameters>
  </Export>
  <Export name="glfwGetKeyName" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="key" />
      <Parameter type="int" name="scancode" />
    </Parameters>
  </Export>
  <Export name="glfwGetKeyScancode" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="key" />
    </Parameters>
  </Export>
  <Export name="glfwGetKey" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="int" name="key" />
    </Parameters>
  </Export>
  <Export name="glfwGetMouseButton" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="int" name="button" />
    </Parameters>
  </Export>
  <Export name="glfwGetCursorPos" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="double" name="xpos" />
      <Parameter type="double" name="ypos" />
    </Parameters>
  </Export>
  <Export name="glfwSetCursorPos" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="double" name="xpos" />
      <Parameter type="double" name="ypos" />
    </Parameters>
  </Export>
  <Export name="glfwCreateCursor" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWimage" name="image" />
      <Parameter type="int" name="xhot" />
      <Parameter type="int" name="yhot" />
    </Parameters>
  </Export>
  <Export name="glfwCreateStandardCursor" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="shape" />
    </Parameters>
  </Export>
  <Export name="glfwDestroyCursor" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWcursor" name="cursor" />
    </Parameters>
  </Export>
  <Export name="glfwSetCursor" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWcursor" name="cursor" />
    </Parameters>
  </Export>
  <Export name="glfwSetKeyCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWkeyfun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwSetCharCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWcharfun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwSetCharModsCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWcharmodsfun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwSetMouseButtonCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWmousebuttonfun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwSetCursorPosCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWcursorposfun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwSetCursorEnterCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWcursorenterfun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwSetScrollCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWscrollfun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwSetDropCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="GLFWdropfun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwJoystickPresent" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="jid" />
    </Parameters>
  </Export>
  <Export name="glfwGetJoystickAxes" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="jid" />
      <Parameter type="int" name="count" />
    </Parameters>
  </Export>
  <Export name="glfwGetJoystickButtons" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="jid" />
      <Parameter type="int" name="count" />
    </Parameters>
  </Export>
  <Export name="glfwGetJoystickHats" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="jid" />
      <Parameter type="int" name="count" />
    </Parameters>
  </Export>
  <Export name="glfwGetJoystickName" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="jid" />
    </Parameters>
  </Export>
  <Export name="glfwGetJoystickGUID" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="jid" />
    </Parameters>
  </Export>
  <Export name="glfwSetJoystickUserPointer" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="jid" />
      <Parameter type="IntPtr" name="pointer" />
    </Parameters>
  </Export>
  <Export name="glfwGetJoystickUserPointer" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="jid" />
    </Parameters>
  </Export>
  <Export name="glfwJoystickIsGamepad" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="jid" />
    </Parameters>
  </Export>
  <Export name="glfwSetJoystickCallback" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWjoystickfun" name="cbfun" />
    </Parameters>
  </Export>
  <Export name="glfwUpdateGamepadMappings" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="string" />
    </Parameters>
  </Export>
  <Export name="glfwGetGamepadName" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="jid" />
    </Parameters>
  </Export>
  <Export name="glfwGetGamepadState" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="jid" />
      <Parameter type="GLFWgamepadstate" name="state" />
    </Parameters>
  </Export>
  <Export name="glfwSetClipboardString" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
      <Parameter type="string" name="string" />
    </Parameters>
  </Export>
  <Export name="glfwGetClipboardString" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
    </Parameters>
  </Export>
  <Export name="glfwGetTime" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
  </Export>
  <Export name="glfwSetTime" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="double" name="time" />
    </Parameters>
  </Export>
  <Export name="glfwGetTimerValue" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
  </Export>
  <Export name="glfwGetTimerFrequency" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
  </Export>
  <Export name="glfwMakeContextCurrent" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
    </Parameters>
  </Export>
  <Export name="glfwGetCurrentContext" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
  </Export>
  <Export name="glfwSwapBuffers" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="GLFWwindow" name="window" />
    </Parameters>
  </Export>
  <Export name="glfwSwapInterval" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="int" name="interval" />
    </Parameters>
  </Export>
  <Export name="glfwExtensionSupported" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="extension" />
    </Parameters>
  </Export>
  <Export name="glfwGetProcAddress" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="procname" />
    </Parameters>
  </Export>
  <Export name="glfwVulkanSupported" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
  </Export>
  <Export name="glfwGetRequiredInstanceExtensions" target="Common" source="glfw3.h">
    <Description>
      <![CDATA[
]]>
    </Description>
    <Parameters>
      <Parameter type="uint32_t" name="count" />
    </Parameters>
  </Export>
  <!--
  ***************************************
  **
  ** FileSystem.hpp
  **
  ***************************************
  -->
  <Export name="FileExists" target="Common" source="FileSystem.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Gets if a file exists.

/// </summary>

/// <param name="filepath"> The filepath. </param>

/// <returns> If the file exists. </returns>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="filepath" />
    </Parameters>
  </Export>
  <Export name="DeleteFile" target="Common" source="FileSystem.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Deletes a file.

/// </summary>

/// <param name="filepath"> The filepath. </param>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="filepath" />
    </Parameters>
  </Export>
  <Export name="CreateFile" target="Common" source="FileSystem.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Creates a file, and the folder path.

/// </summary>

/// <param name="filepath"> The filepath. </param>

/// <param name="createFolders"> If folders should also be created. </param>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="filepath" />
      <Parameter type="bool" name="createFolders" />
    </Parameters>
  </Export>
  <Export name="ClearFile" target="Common" source="FileSystem.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Clears the contents from a file.

/// </summary>

/// <param name="filepath"> The filepath. </param>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="filepath" />
    </Parameters>
  </Export>
  <Export name="CreateFolder" target="Common" source="FileSystem.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Creates a directory.

/// </summary>

/// <param name="path"> The directory to create. </param>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="path" />
    </Parameters>
  </Export>
  <Export name="ReadTextFile" target="Common" source="FileSystem.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Reads a text file into a string.

/// </summary>

/// <param name="filepath"> The filepath. </param>

/// <returns> The string containing the read file. </returns>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="filepath" />
    </Parameters>
  </Export>
  <Export name="WriteTextFile" target="Common" source="FileSystem.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Writes to a text file from a string.

/// </summary>

/// <param name="filepath"> The filepath. </param>

/// <param name="data"> The text data. </param>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="filepath" />
      <Parameter type="string" name="data" />
    </Parameters>
  </Export>
  <Export name="GetWorkingDirectory" target="Common" source="FileSystem.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Gets the current working directory.

/// </summary>

/// <returns> If the working directory. </returns>
]]>
    </Description>
  </Export>
  <Export name="FixPaths" target="Common" source="FileSystem.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Removes backslashes from directories.

/// </summary>

/// <returns> The path with only forward slashes. </returns>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="filepath" />
    </Parameters>
  </Export>
  <Export name="FindExt" target="Common" source="FileSystem.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Gets the file extension for the file.

/// </summary>

/// <returns> The file extension. </returns>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="filepath" />
    </Parameters>
  </Export>
  <!--
  ***************************************
  **
  ** FormatString.hpp
  **
  ***************************************
  -->
  <Export name="StartsWith" target="Common" source="FormatString.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Gets if a string starts with a token.

/// </summary>

/// <param name="str"> The string. </param>

/// <param name="token"> The token. </param>

/// <returns> If a string starts with the token. </returns>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="str" />
      <Parameter type="string" name="token" />
    </Parameters>
  </Export>
  <Export name="Contains" target="Common" source="FormatString.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Gets if a string contains a token.

/// </summary>

/// <param name="str"> The string. </param>

/// <param name="token"> The token. </param>

/// <returns> If a string contains the token. </returns>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="str" />
      <Parameter type="string" name="token" />
    </Parameters>
  </Export>
  <Export name="IsInteger" target="Common" source="FormatString.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Gets if a string is a integer.

/// </summary>

/// <param name="str"> The string. </param>

/// <returns> If a string is a integer. </returns>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="str" />
    </Parameters>
  </Export>
  <Export name="FindCharPos" target="Common" source="FormatString.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Gets the first char index in the string.

/// </summary>

/// <param name="str"> The string. </param>

/// <param name="c"> The char to look for. </param>

/// <returns> The char index. </returns>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="str" />
      <Parameter type="sbyte*" name="c" />
    </Parameters>
  </Export>
  <Export name="Trim" target="Common" source="FormatString.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Trims the left and right side of a string of whitespace.

/// </summary>

/// <param name="str"> The string. </param>

/// <param name="whitespace"> The whitespace type. </param>

/// <returns> The trimmed string. </returns>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="str" />
      <Parameter type="string" name="whitespace" />
    </Parameters>
  </Export>
  <Export name="Substring" target="Common" source="FormatString.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Takes a substring of a string between two bounds.

/// </summary>

/// <param name="str"> The string. </param>

/// <param name="start"> The left bound. </param>

/// <param name="end"> The right bound. </param>

/// <returns> The substring of the string. </returns>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="str" />
      <Parameter type="uint" name="start" />
      <Parameter type="uint" name="end" />
    </Parameters>
  </Export>
  <Export name="RemoveAll" target="Common" source="FormatString.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Removes all tokens from a string.

/// </summary>

/// <param name="str"> The string. </param>

/// <param name="token"> The token. </param>

/// <returns> The string with the tokens removed. </returns>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="str" />
      <Parameter type="sbyte*" name="token" />
    </Parameters>
  </Export>
  <Export name="Replace" target="Common" source="FormatString.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Replaces all tokens from a string.

/// </summary>

/// <param name="str"> The string. </param>

/// <param name="token"> The token. </param>

/// <param name="to"> The string to replace the tokens with. </param>

/// <returns> The string with the tokens replaced. </returns>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="str" />
      <Parameter type="string" name="token" />
      <Parameter type="string" name="to" />
    </Parameters>
  </Export>
  <Export name="Lowercase" target="Common" source="FormatString.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// Lowercases a string.

/// </summary>

/// <param name="str"> The string. </param>

/// <returns> The lowercased string. </returns>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="str" />
    </Parameters>
  </Export>
  <Export name="Uppercase" target="Common" source="FormatString.hpp">
    <Description>
      <![CDATA[
/// <summary>

/// uppercased a string.

/// </summary>

/// <param name="str"> The string. </param>

/// <returns> The uppercased string. </returns>
]]>
    </Description>
    <Parameters>
      <Parameter type="string" name="str" />
    </Parameters>
  </Export>
</Definitions>